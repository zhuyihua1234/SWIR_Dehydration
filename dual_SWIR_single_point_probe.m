% This code analyzes dual wavelength dehydration data generated by single
% point dual SWIR probe
% Instructions:
    % Change the working directory to the folder containing "xlsx" file
    % copy file name into line 11
    % Optional: Set number of frames in this dehydration run
    % The default setting is at 120 frames with 60 seconds
  

%Import data
table = readtable('M24_5psi_run3.xlsx');
%Set number of frames
num_images = 120;
%Remove the first frame
table(1,:) = [];
%Separate table into two wavelength
table_1950 = table(:,1);
table_1300 = table(:,2);

%% Fit 1950nm to Hill Function

%Prepare Hill function fitting parameters
x1 = transpose(1:(num_images-1))/2;
y1 = table2array(table_1950);
maximum = max(y1);
dY_1 = diff(y1)./diff(x1);
slope = max(dY_1);
halfActiv = num_images/4;
intercept = y1(1);

   % Initiate Hill Function fit

        F1 = @(z1,xdata) z1(1) +  ( (z1(2)*xdata.^z1(3)) ./ ...
            (z1(4).^z1(3)+xdata.^z1(3)) ) 
        z0 = [intercept,maximum,slope,halfActiv];

% finds the Hill function based on least squares fitting
z1 = lsqcurvefit(F1,z0,x1,y1); 

% Hill Function Growth rate Output 
        HillOutput_1 = [{[x1,F1(z1,x1)]},{[z1(1),z1(3),z1(4),z1(2)]}];
% Get Hill function fitted growth rate
growth_rate_1 = HillOutput_1{1,2}(2);

%% Find %Ifin for 1950nm
[M, tMax] = max(dY_1);
I_tMax = y1(tMax);
I_t0 = y1(1);
I_tend = y1(num_images-1);
I_tMaxPlus10 = y1(tMax + 10);

percent_Ifin_1 = ((I_tend - I_tMaxPlus10)/(I_tend - I_t0))*100;

%% Find Delta_I for 1950nm
%calculate delta I
Imax_1 = max(y1);
Imin_1 = min(y1);
delta_I_1 = Imax_1 - Imin_1;
delta_I_percent_1 = (delta_I_1/Imin_1)*100;

%% Identify Delay (first frame when derivative is larger than 0.1) for 1950nm
delay_1 = find(dY_1 > 0.1) - 1;
Delay_display_1 = delay_1(1);

%% Fit 1300nm to Hill Function

%Prepare Hill function fitting parameters
x2 = transpose(1:(num_images-1))/2;
y2 = table2array(table_1300);
maximum = max(y2);
dY_2 = diff(y2)./diff(x2);
slope = max(dY_2);
halfActiv = num_images/4;
intercept = y2(1);

   % Initiate Hill Function fit

        F2 = @(z2,xdata) z2(1) +  ( (z2(2)*xdata.^z2(3)) ./ ...
            (z2(4).^z2(3)+xdata.^z2(3)) ) 
        z0 = [intercept,maximum,slope,halfActiv];

% finds the Hill function based on least squares fitting
z2 = lsqcurvefit(F2,z0,x2,y2); 

% Hill Function Growth rate Output 
        HillOutput_2 = [{[x2,F2(z2,x2)]},{[z2(1),z2(3),z2(4),z2(2)]}];
% Get Hill function fitted growth rate
growth_rate_2 = HillOutput_2{1,2}(2);

%% Find %Ifin for 1300nm
[M, tMax] = max(dY_2);
I_tMax = y2(tMax);
I_t0 = y2(1);
I_tend = y2(num_images-1);
I_tMaxPlus10 = y2(tMax + 10);

percent_Ifin_2 = ((I_tend - I_tMaxPlus10)/(I_tend - I_t0))*100;

%% Identify Delay (first frame when derivative is larger than 0.01) for 1300nm
delay_2 = find(dY_2 > 0.01) - 1;
Delay_display_2 = delay_2(1);

%% Find Delta_I for 1300nm
%calculate delta I
Imax_2 = max(y2);
Imin_2 = min(y2);
delta_I_2 = Imax_2 - Imin_2;
delta_I_percent_2 = (delta_I_2/Imin_2)*100;
%% Display figures
    %Plot 1950nm curves
    subplot(1,2,1);
    scatter(x1,y1,'k');
    hold on
    plot(x1,F1(z1,x1),'Linewidth',2,'Color','m');
    title('1950nm');
    xlabel('Time (s)');
    ylabel('Intensity(a.u.)');

    %Plot 1300nm curves
    subplot(1,2,2);
    scatter(x2,y2,'k');
    hold on
    plot(x2,F2(z2,x2),'Linewidth',2,'Color','m');
    title('1300nm');
    xlabel('Time (s)');
    ylabel('Intensity(a.u.)');



%% Display other dehydration parameters
fprintf('1950nm Rate = %0.2f \n', growth_rate_1)
fprintf('1950nm Percent_Ifin = %0.2f \n', percent_Ifin_1)
fprintf('1950nm Delay = %0.2f \n', delay_display_1)
fprintf('1950nm deltaI = %0.2f \n', delta_I_1)
fprintf('1950nm deltaI_percent = %0.2f \n', delta_I_percent_1)

fprintf('1300nm Rate = %0.2f \n', growth_rate_2)
fprintf('1300nm Percent_Ifin = %0.2f \n', percent_Ifin_2)
fprintf('1300nm Delay = %0.2f \n', delay_display_2)
fprintf('1300nm deltaI = %0.2f \n', delta_I_2)
fprintf('1300nm deltaI_percent = %0.2f \n', delta_I_percent_2)
     
